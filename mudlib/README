                       Phantasmal MUDLib for DGD

To get Phantasmal running, please read the INSTALL file.  To start
customizing a Phantasmal-based MUD, read SETUP.  Before you make
significant code changes to Phantasmal, please read doc/Modifying.

Phantasmal is based on the Kernel MUDLib that ships with DGD.  It
tries to be reasonably fast and secure, but prefers robustness to
speed.  Phantasmal's primary focus is on features you don't find in
every MUD, especially things you *should*.  It currently competes
mostly with Melville and with GurbaLib.  Melville is simple to use and
there's not much there.  It's good if you're building from scratch.
GurbaLib has more of a game in place.  It's for implementors who want
a game with the rules already coded and pretty standard.  See
"http://phantasmal.sourceforge.net/Compare.html" for a detailed
comparison of Phantasmal to other current DGD MUDLibs.

Phantasmal is meant for low-volume MUDs -- those with a small number
of simultaneously-connected players.  It's designed to allow excellent
service for that small number.  In this day and age a hobbyist MUD
that gets 50 to 60 players a night is doing well.  Modern cheap
desktop computers are ridiculously powerful when serving that few
connections.  Bandwidth is more of a worry than processor speed.  This
would all be different if we were dealing with much 3D graphics or
even 2D bitmaps, or if big crowds of NPCs were to being simulated.
But the age where we run stuff like DikuMUDs because we have to is
over...


                        Current Status

Phantasmal is in the process of separating itself out from the game's
descriptions and themes.  That will let it act as a kind of standard
library for other MUDs, kind of like what the Kernel Library does.
The Kernel Library is the DGD standard library for inheritance and
security, and Phantasmal would become a standard library for MUD stuff
like rooms and scripts.

The latest information, features, code and tutorials can be located at
"http://phantasmal.sourceforge.net".


                           Features

Phantasmal works on top of the Kernel Library.  That gives it a lot of
built-in security and mean it works on a stable base.  It also means
Phantasmal has a well-tested object architecture good enough to keep
commercial MUDs (like Skotos' servers) up for years.

Phantasmal has a powerful OLC system which is the preferred way to
create new content.  There are also human-readable and -writable
configuration and object files for rooms, portables, exits and
objects.  They're an alternate way to create content.  Admin
characters can play with these files with in-MUD commands.  People
with host machine accounts can directly alter them.

The powerful help system has rich configuration files, full
localization, and Soundex matching for near-misses (if a user asks for
help on "polisees" instead of "policies", say).

See "http://phantasmal.sourceforge.net/Current.html" for a more
complete manifest of the current features of the most up-to-date
version of Phantasmal.

                                                          Angelbob
